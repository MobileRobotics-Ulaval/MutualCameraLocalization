// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.proto

#ifndef PROTOBUF_command_2eproto__INCLUDED
#define PROTOBUF_command_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace dotCapture {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_command_2eproto();
void protobuf_AssignDesc_command_2eproto();
void protobuf_ShutdownFile_command_2eproto();

class Command;
class Command_Option;

enum Command_OptionType {
  Command_OptionType_SHUTTER = 0,
  Command_OptionType_BRIGHTNESS = 1,
  Command_OptionType_EXPOSURE = 2,
  Command_OptionType_GAIN = 3,
  Command_OptionType_THRESHOLD = 4,
  Command_OptionType_START_RECORDING = 5,
  Command_OptionType_STOP_RECORDING = 6,
  Command_OptionType_DISCONNECT = 7
};
bool Command_OptionType_IsValid(int value);
const Command_OptionType Command_OptionType_OptionType_MIN = Command_OptionType_SHUTTER;
const Command_OptionType Command_OptionType_OptionType_MAX = Command_OptionType_DISCONNECT;
const int Command_OptionType_OptionType_ARRAYSIZE = Command_OptionType_OptionType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Command_OptionType_descriptor();
inline const ::std::string& Command_OptionType_Name(Command_OptionType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Command_OptionType_descriptor(), value);
}
inline bool Command_OptionType_Parse(
    const ::std::string& name, Command_OptionType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Command_OptionType>(
    Command_OptionType_descriptor(), name, value);
}
// ===================================================================

class Command_Option : public ::google::protobuf::Message {
 public:
  Command_Option();
  virtual ~Command_Option();

  Command_Option(const Command_Option& from);

  inline Command_Option& operator=(const Command_Option& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command_Option& default_instance();

  void Swap(Command_Option* other);

  // implements Message ----------------------------------------------

  Command_Option* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command_Option& from);
  void MergeFrom(const Command_Option& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .dotCapture.Command.OptionType type = 1 [default = THRESHOLD];
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::dotCapture::Command_OptionType type() const;
  inline void set_type(::dotCapture::Command_OptionType value);

  // optional float value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline float value() const;
  inline void set_value(float value);

  // @@protoc_insertion_point(class_scope:dotCapture.Command.Option)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int type_;
  float value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_command_2eproto();
  friend void protobuf_AssignDesc_command_2eproto();
  friend void protobuf_ShutdownFile_command_2eproto();

  void InitAsDefaultInstance();
  static Command_Option* default_instance_;
};
// -------------------------------------------------------------------

class Command : public ::google::protobuf::Message {
 public:
  Command();
  virtual ~Command();

  Command(const Command& from);

  inline Command& operator=(const Command& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Command& default_instance();

  void Swap(Command* other);

  // implements Message ----------------------------------------------

  Command* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Command& from);
  void MergeFrom(const Command& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Command_Option Option;

  typedef Command_OptionType OptionType;
  static const OptionType SHUTTER = Command_OptionType_SHUTTER;
  static const OptionType BRIGHTNESS = Command_OptionType_BRIGHTNESS;
  static const OptionType EXPOSURE = Command_OptionType_EXPOSURE;
  static const OptionType GAIN = Command_OptionType_GAIN;
  static const OptionType THRESHOLD = Command_OptionType_THRESHOLD;
  static const OptionType START_RECORDING = Command_OptionType_START_RECORDING;
  static const OptionType STOP_RECORDING = Command_OptionType_STOP_RECORDING;
  static const OptionType DISCONNECT = Command_OptionType_DISCONNECT;
  static inline bool OptionType_IsValid(int value) {
    return Command_OptionType_IsValid(value);
  }
  static const OptionType OptionType_MIN =
    Command_OptionType_OptionType_MIN;
  static const OptionType OptionType_MAX =
    Command_OptionType_OptionType_MAX;
  static const int OptionType_ARRAYSIZE =
    Command_OptionType_OptionType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OptionType_descriptor() {
    return Command_OptionType_descriptor();
  }
  static inline const ::std::string& OptionType_Name(OptionType value) {
    return Command_OptionType_Name(value);
  }
  static inline bool OptionType_Parse(const ::std::string& name,
      OptionType* value) {
    return Command_OptionType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated .dotCapture.Command.Option option = 1;
  inline int option_size() const;
  inline void clear_option();
  static const int kOptionFieldNumber = 1;
  inline const ::dotCapture::Command_Option& option(int index) const;
  inline ::dotCapture::Command_Option* mutable_option(int index);
  inline ::dotCapture::Command_Option* add_option();
  inline const ::google::protobuf::RepeatedPtrField< ::dotCapture::Command_Option >&
      option() const;
  inline ::google::protobuf::RepeatedPtrField< ::dotCapture::Command_Option >*
      mutable_option();

  // @@protoc_insertion_point(class_scope:dotCapture.Command)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::dotCapture::Command_Option > option_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_command_2eproto();
  friend void protobuf_AssignDesc_command_2eproto();
  friend void protobuf_ShutdownFile_command_2eproto();

  void InitAsDefaultInstance();
  static Command* default_instance_;
};
// ===================================================================


// ===================================================================

// Command_Option

// required .dotCapture.Command.OptionType type = 1 [default = THRESHOLD];
inline bool Command_Option::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Command_Option::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Command_Option::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Command_Option::clear_type() {
  type_ = 4;
  clear_has_type();
}
inline ::dotCapture::Command_OptionType Command_Option::type() const {
  return static_cast< ::dotCapture::Command_OptionType >(type_);
}
inline void Command_Option::set_type(::dotCapture::Command_OptionType value) {
  assert(::dotCapture::Command_OptionType_IsValid(value));
  set_has_type();
  type_ = value;
}

// optional float value = 2;
inline bool Command_Option::has_value() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Command_Option::set_has_value() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Command_Option::clear_has_value() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Command_Option::clear_value() {
  value_ = 0;
  clear_has_value();
}
inline float Command_Option::value() const {
  return value_;
}
inline void Command_Option::set_value(float value) {
  set_has_value();
  value_ = value;
}

// -------------------------------------------------------------------

// Command

// repeated .dotCapture.Command.Option option = 1;
inline int Command::option_size() const {
  return option_.size();
}
inline void Command::clear_option() {
  option_.Clear();
}
inline const ::dotCapture::Command_Option& Command::option(int index) const {
  return option_.Get(index);
}
inline ::dotCapture::Command_Option* Command::mutable_option(int index) {
  return option_.Mutable(index);
}
inline ::dotCapture::Command_Option* Command::add_option() {
  return option_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::dotCapture::Command_Option >&
Command::option() const {
  return option_;
}
inline ::google::protobuf::RepeatedPtrField< ::dotCapture::Command_Option >*
Command::mutable_option() {
  return &option_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace dotCapture

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::dotCapture::Command_OptionType>() {
  return ::dotCapture::Command_OptionType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_command_2eproto__INCLUDED
